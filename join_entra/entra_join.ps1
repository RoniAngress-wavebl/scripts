$base64String = ""
$scriptDirectory = Split-Path -Parent $MyInvocation.MyCommand.Path
$localPath = Join-Path $scriptDirectory "entra_join.ppkg"

# Step 1: Decode the Base64 string once
$decodedBytes = [System.Convert]::FromBase64String($base64String)
$intermediateString = [System.Text.Encoding]::UTF8.GetString($decodedBytes)

# Step 2: Decode the resulting string again
$decodedBytesFinal = [System.Convert]::FromBase64String($intermediateString)

# Step 3: Write the final decoded content to a file

$outputFilePath = $localPath
[System.IO.File]::WriteAllBytes($outputFilePath, $decodedBytesFinal)

Add-ProvisioningPackage -PackagePath $localPath -ForceInstall -QuietInstall